{% set polars_variant = "polars-lts-cpu" %}
{% set version = "1.7.1" %}

# Note: This recipe is specifically designed to work well with the autotick bot.
# Also refer to https://github.com/conda-forge/rust-feedstock/blob/main/recipe/meta.yaml.
# This recipe has been adopted from https://github.com/conda-forge/polars-feedstock

package:
  name: {{ polars_variant }}
  version: {{ version }}

source:
  - url: https://pypi.io/packages/source/p/polars-lts-cpu/polars_lts_cpu-{{ version }}.tar.gz
    sha256: 27ec71a2c7cf367e2d8d1b1a6c9694600ca3a5e06fe11a18c434e2ba40073999

build:
  number: 0
  skip: true  # [win and python_impl=="pypy"]
  skip: true  # [aarch64 and python_impl=="pypy"]

requirements:
  build:
    - python {{python}}                             # [build_platform != target_platform]
    # there is no cross-python for linux-64 -> win-64
    - cross-python_{{ target_platform }}  # [build_platform != target_platform and not target_platform == "win-64"]
    - crossenv                            # [build_platform != target_platform]
    - maturin >=1.3.2,<2                  # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}               # [win]
    # clang_win-64 already adds all required run_exports for the windows build
    - sysroot_{{ target_platform }} 2.17 # [linux]  # [not (build_platform == "linux-64" and target_platform == "win-64")]
    - {{ compiler('rust') }}
    - posix                               # [build_platform == "win-64"]
    - cmake {{cmake}}
    - make {{make}}                               # [unix]
    - cargo-feature                       # [build_platform != target_platform and target_platform == "win-64"]
    - cargo-bundle-licenses
    - rust-nightly {{rust_nightly}}
  host:
    - python {{python}}
    - pip {{pip}}
    - maturin >=1.3.2,<2
    - rust-nightly {{rust_nightly}}
  run:
    - python {{python}}
    - numpy {{numpy}}
    - backports.zoneinfo                   # [py<39]
    - typing_extensions {{typing_extensions}}            # [py<311]
    - packaging                            # [py>=310]

test:
  imports:
    - polars
  commands:
    - pip check
    - python -c "from polars import DataFrame"
  requires:
    - pip

about:
  home: https://github.com/pola-rs/polars
  license: MIT
  license_family: MIT
  license_file:
    - LICENSE
    - THIRDPARTY.yml
  summary: Polars is a blazingly fast DataFrames library implemented in Rust using Apache Arrow(2) as memory model.
  doc_url: https://pola-rs.github.io/polars-book/user-guide/index.html
  dev_url: https://github.com/pola-rs/polars

extra:
  recipe-maintainers:
    - open-ce/open-ce-dev-team
